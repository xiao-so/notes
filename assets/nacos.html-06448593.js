import{_ as c,r as o,o as l,c as i,d as s,a as n,b as p,e as t}from"./app-9157d7b3.js";const u="/notes/assets/1561217892717-1418fb9b-7faa-4324-87b9-f1740329f564-c1b39f34.jpeg",k={},r=t(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>nacos1.4.6 源码</p><h2 id="源码启动" tabindex="-1"><a class="header-anchor" href="#源码启动" aria-hidden="true">#</a> 源码启动</h2><p>下载 nacos 1.4.6 源码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token number">1.4</span>.6 https://github.com/alibaba/nacos.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>源码启动入口为 <code>nacos-console</code> 模块，入口类为 <code>com.alibaba.nacos.Nacos.java</code></p><p>源码启动前，需要先编译 <code>consistency</code> 模块，把 <code>.proto</code> 编译为 Java 类，再启动。</p><p>调试环境添加启动参数 <code>-Dnacos.standalone=true</code>，使用内嵌数据库</p><h2 id="架构" tabindex="-1"><a class="header-anchor" href="#架构" aria-hidden="true">#</a> 架构</h2><p><img src="`+u+'" alt="nacos_arch.jpg"></p><p>address：</p><p>api：</p><p>auth：认证权限模块</p><p>client：</p><p>cmdb：解决元数据存储，与三方 CMDB 系统对接问题</p><p>common：</p><p>config：</p><p>consistency：</p><p>console：</p><p>console-ui：控制台前端</p><p>core：核心模块</p><p>distribution：</p><p>doc：</p><p>exmaple：</p><p>istio：</p><p>naming：</p><p>sys：</p><p>test：</p><h2 id="隔离模型" tabindex="-1"><a class="header-anchor" href="#隔离模型" aria-hidden="true">#</a> 隔离模型</h2><p>nacos采用了company，namespace，group，service四级隔离模型</p>',30),d=t(`<h2 id="配置中心" tabindex="-1"><a class="header-anchor" href="#配置中心" aria-hidden="true">#</a> 配置中心</h2><h3 id="长轮询的实现" tabindex="-1"><a class="header-anchor" href="#长轮询的实现" aria-hidden="true">#</a> 长轮询的实现</h3><p>nacos 1.x 中采用长轮询实现监听配置变化</p><p>url：<code>/nacos/v1/cs/configs/listener</code></p><p>长轮询监听配置的方法如下，当前方法不会返回数据，而是调用长轮询方法，当数据有变化时在 response 里写数据返回</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/listener&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Secured</span><span class="token punctuation">(</span>action <span class="token operator">=</span> <span class="token class-name">ActionTypes</span><span class="token punctuation">.</span><span class="token constant">READ</span><span class="token punctuation">,</span> parser <span class="token operator">=</span> <span class="token class-name">ConfigResourceParser</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.catalina.ASYNC_SUPPORTED&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取监听配置的字符串</span>
    <span class="token class-name">String</span> probeModify <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;Listening-Configs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>probeModify<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;invalid probeModify&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    probeModify <span class="token operator">=</span> <span class="token class-name">URLDecoder</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>probeModify<span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">ENCODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> clientMd5Map<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        clientMd5Map <span class="token operator">=</span> <span class="token class-name">MD5Util</span><span class="token punctuation">.</span><span class="token function">getClientMd5Map</span><span class="token punctuation">(</span>probeModify<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;invalid probeModify&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// do long-polling</span>
    inner<span class="token punctuation">.</span><span class="token function">doPollingConfig</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">,</span> probeModify<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doPollingConfig</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> clientMd5Map<span class="token punctuation">,</span> <span class="token keyword">int</span> probeRequestSize<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        
        <span class="token comment">// Long polling.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">LongPollingService</span><span class="token punctuation">.</span><span class="token function">isSupportLongPolling</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            longPollingService<span class="token punctuation">.</span><span class="token function">addLongPollingClient</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">,</span> probeRequestSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">HttpServletResponse</span><span class="token punctuation">.</span><span class="token constant">SC_OK</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 不支持长轮询，直接返回</span>
        <span class="token comment">// Compatible with short polling logic.</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> changedGroups <span class="token operator">=</span> <span class="token class-name">MD5Util</span><span class="token punctuation">.</span><span class="token function">compareMd5</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Compatible with short polling result.</span>
        <span class="token class-name">String</span> oldResult <span class="token operator">=</span> <span class="token class-name">MD5Util</span><span class="token punctuation">.</span><span class="token function">compareMd5OldResult</span><span class="token punctuation">(</span>changedGroups<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> newResult <span class="token operator">=</span> <span class="token class-name">MD5Util</span><span class="token punctuation">.</span><span class="token function">compareMd5ResultString</span><span class="token punctuation">(</span>changedGroups<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">String</span> version <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">CLIENT_VERSION_HEADER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>version <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            version <span class="token operator">=</span> <span class="token string">&quot;2.0.0&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">int</span> versionNum <span class="token operator">=</span> <span class="token class-name">Protocol</span><span class="token punctuation">.</span><span class="token function">getVersionNumber</span><span class="token punctuation">(</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Before 2.0.4 version, return value is put into header.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>versionNum <span class="token operator">&lt;</span> <span class="token constant">START_LONG_POLLING_VERSION_NUM</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">PROBE_MODIFY_RESPONSE</span><span class="token punctuation">,</span> oldResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
            response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">PROBE_MODIFY_RESPONSE_NEW</span><span class="token punctuation">,</span> newResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span> newResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token class-name">Loggers</span><span class="token punctuation">.</span><span class="token constant">AUTH</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;new content:&quot;</span> <span class="token operator">+</span> newResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Disable cache.</span>
        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Pragma&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;no-cache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setDateHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Expires&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Cache-Control&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;no-cache,no-store&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">.</span><span class="token constant">SC_OK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">HttpServletResponse</span><span class="token punctuation">.</span><span class="token constant">SC_OK</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是长轮询实现，首先检测配置是否发生了变化，如果发生了变化，直接返回。否则开启长轮询异步返回</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Add LongPollingClient.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">req</span>              HttpServletRequest.
     * <span class="token keyword">@param</span> <span class="token parameter">rsp</span>              HttpServletResponse.
     * <span class="token keyword">@param</span> <span class="token parameter">clientMd5Map</span>     clientMd5Map.
     * <span class="token keyword">@param</span> <span class="token parameter">probeRequestSize</span> probeRequestSize.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addLongPollingClient</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> rsp<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> clientMd5Map<span class="token punctuation">,</span>
            <span class="token keyword">int</span> probeRequestSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
        <span class="token class-name">String</span> str <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token class-name">LongPollingService</span><span class="token punctuation">.</span><span class="token constant">LONG_POLLING_HEADER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> noHangUpFlag <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token class-name">LongPollingService</span><span class="token punctuation">.</span><span class="token constant">LONG_POLLING_NO_HANG_UP_HEADER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> appName <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token class-name">RequestUtil</span><span class="token punctuation">.</span><span class="token constant">CLIENT_APPNAME_HEADER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> tag <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Vipserver-Tag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> delayTime <span class="token operator">=</span> <span class="token class-name">SwitchService</span><span class="token punctuation">.</span><span class="token function">getSwitchInteger</span><span class="token punctuation">(</span><span class="token class-name">SwitchService</span><span class="token punctuation">.</span><span class="token constant">FIXED_DELAY_TIME</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Add delay time for LoadBalance, and one response is returned 500 ms in advance to avoid client timeout.</span>
        <span class="token keyword">long</span> timeout <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">-</span> delayTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFixedPolling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            timeout <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token function">getFixedPollingInterval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Do nothing but set fix polling timeout.</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> changedGroups <span class="token operator">=</span> <span class="token class-name">MD5Util</span><span class="token punctuation">.</span><span class="token function">compareMd5</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> rsp<span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>changedGroups<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">generateResponse</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> rsp<span class="token punctuation">,</span> changedGroups<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">CLIENT_LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}|{}|{}|{}|{}|{}|{}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">,</span> <span class="token string">&quot;instant&quot;</span><span class="token punctuation">,</span>
                        <span class="token class-name">RequestUtil</span><span class="token punctuation">.</span><span class="token function">getRemoteIp</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;polling&quot;</span><span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> probeRequestSize<span class="token punctuation">,</span>
                        changedGroups<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>noHangUpFlag <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> noHangUpFlag<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token constant">TRUE_STR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">CLIENT_LOG</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}|{}|{}|{}|{}|{}|{}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">,</span> <span class="token string">&quot;nohangup&quot;</span><span class="token punctuation">,</span>
                        <span class="token class-name">RequestUtil</span><span class="token punctuation">.</span><span class="token function">getRemoteIp</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;polling&quot;</span><span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> probeRequestSize<span class="token punctuation">,</span>
                        changedGroups<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> ip <span class="token operator">=</span> <span class="token class-name">RequestUtil</span><span class="token punctuation">.</span><span class="token function">getRemoteIp</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Must be called by http thread, or send response.</span>
        <span class="token keyword">final</span> <span class="token class-name">AsyncContext</span> asyncContext <span class="token operator">=</span> req<span class="token punctuation">.</span><span class="token function">startAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// AsyncContext.setTimeout() is incorrect, Control by oneself</span>
        asyncContext<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">ConfigExecutor</span><span class="token punctuation">.</span><span class="token function">executeLongPolling</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">ClientLongPolling</span><span class="token punctuation">(</span>asyncContext<span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">,</span> ip<span class="token punctuation">,</span> probeRequestSize<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> appName<span class="token punctuation">,</span> tag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建了一个clientLongPolling的任务，作用是</p><ol><li>新建了一个任务，把当前任务放到了队列<code>allSubs</code>里</li><li>延迟29.5s执行一个任务：尝试删除队列里当前任务 <ul><li>如果删除失败，说明任务已经被执行</li><li>如果删除成功，说明任务还未被执行，检查一下配置是否发生了变化，如果变化，推送变化数据，如果没变化，推送null数据</li></ul></li></ol><p>这个队列<code>allSubs</code>是公用队列，如果配置发生了变化，会触发一个事件，并调用相应队列的方法，返回结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">class</span> <span class="token class-name">ClientLongPolling</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
        
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            asyncTimeoutFuture <span class="token operator">=</span> <span class="token class-name">ConfigExecutor</span><span class="token punctuation">.</span><span class="token function">scheduleLongPolling</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token function">getRetainIps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ClientLongPolling</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span>ip<span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        
                        <span class="token comment">// Delete subsciber&#39;s relations.</span>
                        <span class="token keyword">boolean</span> removeFlag <span class="token operator">=</span> allSubs<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">ClientLongPolling</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>removeFlag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFixedPolling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">CLIENT_LOG</span>
                                        <span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}|{}|{}|{}|{}|{}&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> createTime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;fix&quot;</span><span class="token punctuation">,</span>
                                                <span class="token class-name">RequestUtil</span><span class="token punctuation">.</span><span class="token function">getRemoteIp</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> asyncContext<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                <span class="token string">&quot;polling&quot;</span><span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> probeRequestSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> changedGroups <span class="token operator">=</span> <span class="token class-name">MD5Util</span>
                                        <span class="token punctuation">.</span><span class="token function">compareMd5</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> asyncContext<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span> asyncContext<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span>changedGroups<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token function">sendResponse</span><span class="token punctuation">(</span>changedGroups<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                    <span class="token function">sendResponse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                                <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">CLIENT_LOG</span>
                                        <span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}|{}|{}|{}|{}|{}&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> createTime<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;timeout&quot;</span><span class="token punctuation">,</span>
                                                <span class="token class-name">RequestUtil</span><span class="token punctuation">.</span><span class="token function">getRemoteIp</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> asyncContext<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                                <span class="token string">&quot;polling&quot;</span><span class="token punctuation">,</span> clientMd5Map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> probeRequestSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token function">sendResponse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_LOG</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;client subsciber&#39;s relations delete fail.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">LogUtil</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_LOG</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;long polling error:&quot;</span> <span class="token operator">+</span> t<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    
                <span class="token punctuation">}</span>
                
            <span class="token punctuation">}</span><span class="token punctuation">,</span> timeoutTime<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            allSubs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="用户权限模块" tabindex="-1"><a class="header-anchor" href="#用户权限模块" aria-hidden="true">#</a> 用户权限模块</h2><p>nacos的auth模块被设计为轻量级auth，只适用于微服务内部使用</p><p>:::info</p><ul><li>Nacos是一个内部微服务组件，需要在可信的内部网络中运行，不可暴露在公网环境，防止带来安全风险。</li><li>Nacos提供简单的鉴权实现，为防止业务错用的弱鉴权体系，不是防止恶意攻击的强鉴权体系。</li><li>如果运行在不可信的网络环境或者有强鉴权诉求，请参考官方简单实现做替换增强。</li></ul><p>:::</p><p>Nacos用户权限主要有两个管理模块：</p><ul><li><p>用户管理：解决用户管理，登录，SSO 等问题</p></li><li><p>权限管理：解决身份识别，访问控制，角色管理等问题</p></li></ul><h3 id="结构" tabindex="-1"><a class="header-anchor" href="#结构" aria-hidden="true">#</a> 结构</h3><p>Auth模块：主要定义权限相关的类（ActionTypes），权限模型（Permission、Resource、User），以及相关注解，比较简单</p><p>Console模块：主要提供业务层Rest接口，无非内嵌数据库或者外部数据库的增删改查</p><h2 id="存储模块" tabindex="-1"><a class="header-anchor" href="#存储模块" aria-hidden="true">#</a> 存储模块</h2><p>nacos存储模块主要提供kv存储服务，接口较为简单，实现也只提供了File和Memory两种简单实现，RocksDB没有实现</p><h3 id="接口设计" tabindex="-1"><a class="header-anchor" href="#接口设计" aria-hidden="true">#</a> 接口设计</h3><p>首先看到 core模块 <code>com.alibaba.nacos.core.storage.kv.KvStorage</code> 接口，提供了围绕key的增删改查接口以及三个实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">KvStorage</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">enum</span> <span class="token class-name">KvType</span> <span class="token punctuation">{</span>
        <span class="token class-name">File</span><span class="token punctuation">,</span>
        <span class="token class-name">Memory</span><span class="token punctuation">,</span>
        <span class="token class-name">RocksDB</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    
    
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token function">batchGet</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> keys<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>
    
    <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>
    
    <span class="token keyword">void</span> <span class="token function">batchPut</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> keys<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> values<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>
    
    <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">batchDelete</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> keys<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>
    
    <span class="token keyword">void</span> <span class="token function">doSnapshot</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> backupPath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>
    
    <span class="token keyword">void</span> <span class="token function">snapshotLoad</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>
    
    <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token function">allKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">;</span>
    
    <span class="token keyword">void</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="file-实现" tabindex="-1"><a class="header-anchor" href="#file-实现" aria-hidden="true">#</a> File 实现</h3><p>File实现比较简单，以其中的构造方法和get方法作说明</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>     <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> baseDir<span class="token punctuation">;</span>
    
    <span class="token doc-comment comment">/**
     * Ensure that a consistent view exists when implementing file copies.
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantReadWriteLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantReadWriteLock<span class="token punctuation">.</span>ReadLock</span> readLock <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantReadWriteLock<span class="token punctuation">.</span>WriteLock</span> writeLock <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


	<span class="token keyword">public</span> <span class="token class-name">FileKvStorage</span><span class="token punctuation">(</span><span class="token class-name">String</span> baseDir<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>baseDir <span class="token operator">=</span> baseDir<span class="token punctuation">;</span>
        <span class="token class-name">DiskUtils</span><span class="token punctuation">.</span><span class="token function">forceMkdir</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span> <span class="token punctuation">{</span>
        readLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">DiskUtils</span><span class="token punctuation">.</span><span class="token function">readFileBytes</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            readLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建Java进程级读写锁，粒度为目录级，也就是说读操作互不影响，写操作会暂停其他读写。但比较令人费解的是，put 系列方法也是使用读锁，只有doSnapshot做整个目录快照时，才使用写锁。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">KvStorageException</span> <span class="token punctuation">{</span>
        readLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">DiskUtils</span><span class="token punctuation">.</span><span class="token function">touch</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">DiskUtils</span><span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">KvStorageException</span><span class="token punctuation">(</span><span class="token class-name">ErrorCode<span class="token punctuation">.</span>KVStorageWriteError</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            readLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="memory-实现" tabindex="-1"><a class="header-anchor" href="#memory-实现" aria-hidden="true">#</a> Memory 实现</h3><p>Memory实现更为简单，围绕线程安全的 ConcurrentSkipListMap （并发读写的有序map）进行增删改查</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span><span class="token class-name">Key</span><span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> storage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentSkipListMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="设计模式" tabindex="-1"><a class="header-anchor" href="#设计模式" aria-hidden="true">#</a> 设计模式</h3><p>StorageFactory.java 使用了工厂模式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">KvStorage</span> <span class="token function">createKvStorage</span><span class="token punctuation">(</span><span class="token class-name">KvStorage<span class="token punctuation">.</span>KvType</span> type<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> label<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> baseDir<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token class-name">File</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FileKvStorage</span><span class="token punctuation">(</span>baseDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token class-name">Memory</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MemoryKvStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token class-name">RocksDB</span><span class="token operator">:</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;this kv type : [&quot;</span> <span class="token operator">+</span> type<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] not support&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="服务注册发现" tabindex="-1"><a class="header-anchor" href="#服务注册发现" aria-hidden="true">#</a> 服务注册发现</h2><p>服务注册发现功能是 Nacos 核心，主要位于 Naming 模块和apis模块</p><h3 id="模型" tabindex="-1"><a class="header-anchor" href="#模型" aria-hidden="true">#</a> 模型</h3>`,42),v=t(`<p>一个能提供服务的实例所属模型如上图</p><p>nacos 的 group没有实体，其实group是service的一部分，以service前缀来区分group，例如servicename为<code>DEFAULT_GROUP@@nacos.test.3</code>，group为<code>DEFAULT_GROUP</code>，service为<code>nacos.test.3</code></p><h3 id="代码模型" tabindex="-1"><a class="header-anchor" href="#代码模型" aria-hidden="true">#</a> 代码模型</h3><p>com.alibaba.nacos.api.naming.pojo.Instance</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@JsonInclude</span><span class="token punctuation">(</span><span class="token class-name">Include</span><span class="token punctuation">.</span><span class="token constant">NON_NULL</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Instance</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">742906310567291979L</span><span class="token punctuation">;</span>
    <span class="token comment">//实例的唯一id</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> instanceId<span class="token punctuation">;</span>
    <span class="token comment">//实例IP</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> ip<span class="token punctuation">;</span>
    <span class="token comment">//实例端口</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> port<span class="token punctuation">;</span>
    <span class="token comment">//实例权重</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> weight <span class="token operator">=</span> <span class="token number">1.0D</span><span class="token punctuation">;</span> 
    <span class="token comment">//实例健康状态</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> healthy <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">//实例是否可接收请求</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> enabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">//实例是否为临时实例</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> ephemeral <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token comment">//实例所属集群信息</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> clusterName<span class="token punctuation">;</span>
    <span class="token comment">//实例所属服务信息</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> serviceName<span class="token punctuation">;</span>
    <span class="token comment">//用户扩展属性</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> metadata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.alibaba.nacos.api.naming.pojo.Cluster</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;checkstyle:abbreviationaswordinname&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cluster</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token comment">//所属服务名称</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> serviceName<span class="token punctuation">;</span>

    <span class="token comment">//集群名称</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token comment">//集群健康检查配置</span>
    <span class="token keyword">private</span> <span class="token class-name">AbstractHealthChecker</span> healthChecker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tcp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

    <span class="token comment">//集群实例默认注册端口</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> defaultPort <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>

    <span class="token comment">//集群实例默认健康检查端口</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> defaultCheckPort <span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>

    <span class="token comment">//是否使用实例端口做健康检查</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> useIPPort4Check <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token comment">//元数据</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> metadata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>com.alibaba.nacos.api.naming.pojo.Service</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3470985546826874460L</span><span class="token punctuation">;</span>
    <span class="token comment">// 服务名</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token comment">// 保护阈值</span>
    <span class="token keyword">private</span> <span class="token keyword">float</span> protectThreshold <span class="token operator">=</span> <span class="token number">0.0F</span><span class="token punctuation">;</span>
    <span class="token comment">// 应用名</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> appName<span class="token punctuation">;</span>
   	<span class="token comment">// group 名</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> groupName<span class="token punctuation">;</span>
    <span class="token comment">// 元数据</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> metadata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>存储 namespace，group，service 映射</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token doc-comment comment">/**
     * Map(namespace, Map(group::serviceName, Service)).
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Service</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> serviceMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这个map虽然是多线程安全的map，但并不能保证相关操作的原子性，创建服务时，如果不存在namespace需要加锁。</p><p>:::info</p><p>putServiceLock 可以不需要用 volatile 修饰，因为不需要读取变量的值</p><p>:::</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> putServiceLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
     * Put service into manager.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">service</span> service
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">putService</span><span class="token punctuation">(</span><span class="token class-name">Service</span> service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 如果不存在该 namespace，创建</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>serviceMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">getNamespaceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>putServiceLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>serviceMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">getNamespaceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    serviceMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">getNamespaceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentSkipListMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        serviceMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">getNamespaceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>service<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> service<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rest接口" tabindex="-1"><a class="header-anchor" href="#rest接口" aria-hidden="true">#</a> Rest接口</h3>`,17),m={href:"https://nacos.io/zh-cn/docs/open-api.html",target:"_blank",rel:"noopener noreferrer"},b=t('<h2 id="分布式" tabindex="-1"><a class="header-anchor" href="#分布式" aria-hidden="true">#</a> 分布式</h2><h3 id="一致性协议" tabindex="-1"><a class="header-anchor" href="#一致性协议" aria-hidden="true">#</a> 一致性协议</h3><p>Nacos提供CP和AP两类实现，CP使用现有库的Raft协议实现，AP使用自研弱一致性Distro协议</p><h3 id="todo-distro" tabindex="-1"><a class="header-anchor" href="#todo-distro" aria-hidden="true">#</a> todo：distro</h3><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',5),g={href:"https://blog.csdn.net/chongbaozhong/article/details/116658595",target:"_blank",rel:"noopener noreferrer"},y={href:"https://nacos.io/zh-cn/docs/quick-start.html",target:"_blank",rel:"noopener noreferrer"},h=n("p",null,"https://developer.aliyun.com/ebook/36",-1),w={href:"https://blog.csdn.net/weixin_37689658/article/details/122626747",target:"_blank",rel:"noopener noreferrer"};function f(S,q){const e=o("Mermaid"),a=o("ExternalLinkIcon");return l(),i("div",null,[r,s(e,{id:"mermaid-88",code:"eJxLL0osyFAIceJSAILi0iQIPzk/tyAxr9IxWulp65qn/TsclWLBCkAgJbMoNbkkMz8PpgtFZ15ibmpxQWJyKlAvgo2kHd0IBQUUKbhB6UX5pQVAQyA0mgE43YFhTHFqUVlmcqphtBKMhcWo1LwUFDFkPowNo7EGlBMsoJxIDyigXgQbT0DhCSagERCa0mCyhAeTJQXBBAANTZ8/"}),d,s(e,{id:"mermaid-241",code:"eJxLL0osyFDwCeLKS8xNLS5ITE7V1bVLL8ovLeACk0BecWpRWWZyKheUBook55QWl6QWcUFpoEhmXnFJYh5QEQCDeByl"}),v,n("p",null,[n("a",m,[p("Open API 指南 (nacos.io)"),s(a)])]),b,n("p",null,[n("a",g,[p("Nacos 1.4.1源码启动流程_nacos 1.4.1 源码启动_苏州-DaniR的博客-CSDN博客"),s(a)])]),n("p",null,[n("a",y,[p("Nacos 快速开始"),s(a)])]),h,n("p",null,[n("a",w,[p("Nacos集群（二）阿里自研弱一致性Distro协议核心实现_@candistro_我神级欧文的博客-CSDN博客"),s(a)])])])}const L=c(k,[["render",f],["__file","nacos.html.vue"]]);export{L as default};
