import{_ as r,r as i,o as s,c as l,a as t,b as e,d as a,e as n}from"./app-9157d7b3.js";const o={},c=n('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>MongoDB 是一个基于文档的无模式 NoSQL 数据库管理系统，可以储存半结构化的数据类型。它采用 BSON（二进制形式的 JSON）进行数据存储，支持复制和分片，可以实现高可用性、横向扩展等特性，适合处理大量数据和高并发读写操作。</p><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><h3 id="和-sql-数据库的差异" tabindex="-1"><a class="header-anchor" href="#和-sql-数据库的差异" aria-hidden="true">#</a> 和 SQL 数据库的差异</h3><table><thead><tr><th></th><th>SQL 数据库</th><th><strong>MongoDB</strong></th></tr></thead><tbody><tr><td>组成</td><td>数据库、表、行、列</td><td>数据库、集合、文档</td></tr><tr><td>主键</td><td>必须有主键</td><td>主键自动创建</td></tr><tr><td>结构</td><td>结构化数据</td><td>非结构化/半结构化数据</td></tr><tr><td>数据模式</td><td>按预定义模板存储数据</td><td>基于 NoSQL 存储的灵活性，没有预定义的模板</td></tr><tr><td>查询</td><td>使用 SQL 进行查询</td><td>使用 MongoDB 查询语言（MQL）</td></tr><tr><td>内联操作</td><td>不支持</td><td>支持</td></tr><tr><td>事务</td><td>支持事务</td><td>不完全支持事务</td></tr></tbody></table><p>以下是 SQL 和 MongoDB 数据库之间表格、行、列差异的对比：</p><table><thead><tr><th>特征</th><th>SQL 数据库</th><th>MongoDB</th></tr></thead><tbody><tr><td>数据库</td><td>由多个数据表组成</td><td>由多个集合组成</td></tr><tr><td>表格</td><td>由多个行与列组成</td><td>由多个文档组成</td></tr><tr><td>行</td><td>一条记录</td><td>一个文档</td></tr><tr><td>列</td><td>由不同的数据类型组成，例如整型、浮点型、字符串、日期等</td><td>由一组键-值对的形式组成</td></tr><tr><td>关系</td><td>存在于表格行中</td><td>没有关系的概念</td></tr><tr><td>主键</td><td>唯一标识符，用于区分行</td><td>唯一标识符，用于区分文档</td></tr></tbody></table><p>总体来讲，基于 SQL 的数据库更适合与事务处理有关的应用程序并且<strong>支持复杂查询</strong>。然而，在处理大量数据时，NoSQL 数据库（如 MongoDB）可以提供更好的性能。此外，MongoDB 还提供了更灵活的数据建模方式。</p><p>MongoDB 不支持连表查询，但可以通过内嵌文档的方式实现类似效果</p><h3 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h3><table><thead><tr><th>数据类型</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>double</td><td>双精度浮点数</td><td>{ &quot;score&quot; : 9.5 }</td></tr><tr><td>string</td><td>字符串</td><td>{ &quot;name&quot; : &quot;John&quot; }</td></tr><tr><td>object</td><td>对象（即嵌入文档）</td><td>{ &quot;address&quot; : {&quot;street&quot; : &quot;123 Main St.&quot;} }</td></tr><tr><td>array</td><td>数组</td><td>{ &quot;scores&quot; : [ 85, 90, 82 ] }</td></tr><tr><td>binary data</td><td>二进制数据</td><td>{ &quot;image&quot; : BinData( 0, &quot;jVjTDF==&quot;) }</td></tr><tr><td>undefined</td><td>已弃用（不使用）</td><td>{ &quot;value&quot; : undefined }</td></tr><tr><td>ObjectId</td><td>文档的唯一 ID</td><td>{ &quot;_id&quot; : ObjectId(&quot;507f191e810c19729de860ea&quot;) }</td></tr><tr><td>boolean</td><td>布尔值</td><td>{ &quot;isAvailable&quot;: true }</td></tr><tr><td>date</td><td>日期时间</td><td>{ &quot;createdAt&quot;: new Date() }</td></tr><tr><td>null</td><td>空值</td><td>{ &quot;description&quot;:null }</td></tr><tr><td>regex</td><td>正则表达式</td><td>{ &quot;pattern&quot;: /regex/}</td></tr><tr><td>JavaScript</td><td>可执行的 JavaScript 代码</td><td>{ &quot;code&quot;: function() { console.log(&quot;Hello, world!&quot;); } }</td></tr><tr><td>symbol</td><td>符号类型 （不推荐使用）</td><td>{ &quot;value&quot;: Symbol(&quot;foo&quot;) }</td></tr><tr><td>int</td><td>32 位有符号整数</td><td>{ &quot;score&quot;: 42 }</td></tr><tr><td>timestamp</td><td>时间戳</td><td>{ &quot;lastModified&quot;: Timestamp(1567603032, 1) }</td></tr><tr><td>long</td><td>64 位有符号整数</td><td>{ &quot;value&quot;: NumberLong(9223372036854775807) }</td></tr><tr><td>decimal128</td><td>128 位无符号十进制数</td><td>{ &quot;price&quot;: NumberDecimal(&quot;19.99&quot;) }</td></tr></tbody></table><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="下载" tabindex="-1"><a class="header-anchor" href="#下载" aria-hidden="true">#</a> 下载</h3>',13),u={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},h=n(`<h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><p><strong>以命令行方式启动</strong></p><ol><li>新建和<code>bin</code>文件夹同级文件夹<code>data</code></li><li>在 <code>data</code> 文件夹下新建 <code>db</code>文件夹</li><li>在 <code>bin</code>文件夹下输入</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mongod --dbpath=..\\data\\db --port=27017
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>以配置文件启动</strong></p><ol><li>新建 <code>config</code> 文件夹</li><li>新建 <code>mongod.conf</code></li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
  <span class="token key atrule">destination</span><span class="token punctuation">:</span> file
  <span class="token key atrule">path</span><span class="token punctuation">:</span> /var/log/mongodb/mongod.log
  <span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
  <span class="token key atrule">dbPath</span><span class="token punctuation">:</span> /var/lib/mongodb
  <span class="token key atrule">journal</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 启动数据库 journal 功能，确保数据持久化和一致性</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
  <span class="token key atrule">bindIp</span><span class="token punctuation">:</span> 127.0.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在 <code>bin</code> 文件夹下以配置文件方式启动</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mongod --config ../config/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="连接" tabindex="-1"><a class="header-anchor" href="#连接" aria-hidden="true">#</a> 连接</h3><p>连接数据库可以使用图形化界面或者使用命令行 Shell</p><p><strong>使用命令行</strong></p>`,12),p={href:"https://www.mongodb.com/try/download/shell",target:"_blank",rel:"noopener noreferrer"},v=t("li",null,[t("p",null,[e("下载后在 "),t("code",null,"mongosh/bin"),e(" 目录执行")])],-1),b=t("div",{class:"language-text line-numbers-mode","data-ext":"text"},[t("pre",{class:"language-text"},[t("code",null,`mongosh --host=127.0.0.1 --port=27017
`)]),t("div",{class:"line-numbers","aria-hidden":"true"},[t("div",{class:"line-number"})])],-1),g=t("p",null,[t("strong",null,"图形化工具")],-1),m={href:"https://www.mongodb.com/try/download/compass",target:"_blank",rel:"noopener noreferrer"},x=n(`<h2 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h2><h3 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h3><p>MongoDB 数据库名称采用 UTF-8 编码，长度最长为 64 个字符，不能包含空格、点号（.）和$符，并且区分大小写。以下是一些保留的数据库名：</p><ul><li>admin：管理权限数据库</li><li>local：本地存储数据库</li><li>config：MongoDB 集群中的数据配置信息库</li></ul><p>这些数据库是系统级别的保留数据库，不能直接删除和操作它们中的数据集合。</p><h4 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h4><p>查看所有数据库</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>show dbs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选择数据库（不存在自动创建到内存）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>use &lt;db&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看正在使用的数据库</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除当前数据库</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.dropDatabase()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="集合" tabindex="-1"><a class="header-anchor" href="#集合" aria-hidden="true">#</a> 集合</h3><p>集合类似于关系型数据库中的表。集合存储了多个文档（document），每个文档可以有不同的结构和字段。</p><h4 id="操作-1" tabindex="-1"><a class="header-anchor" href="#操作-1" aria-hidden="true">#</a> 操作</h4><p>创建一个集合</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.createCollection(&quot;mine&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询所有集合</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>show collections
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除集合</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.drop()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="文档" tabindex="-1"><a class="header-anchor" href="#文档" aria-hidden="true">#</a> 文档</h3><p>MongoDB 中文档是一个键值对的集合，用来表示数据。其中的值可以是各种类型的数据，包括嵌套的文档和数组，具有非常高的灵活性。</p><p>文档数据结构和 JSON 基本一样。</p><h4 id="插入" tabindex="-1"><a class="header-anchor" href="#插入" aria-hidden="true">#</a> 插入</h4><p>单个文档插入，使用 insert 或 save，如果集合不存在会自动隐式创建</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.insert( { &quot;messageId&quot;: 1,&quot;content&quot;: &quot;你好&quot;,created: new Date() } );
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>多个文档插入，用 insertMany</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.insertMany([
	{ &quot;messageId&quot;: 2,&quot;content&quot;: &quot;你好 2&quot;,created: new Date() },
	{ &quot;messageId&quot;: 3,&quot;content&quot;: &quot;你好 3&quot;,created: new Date() } 
]);

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h4><h5 id="简单查询" tabindex="-1"><a class="header-anchor" href="#简单查询" aria-hidden="true">#</a> 简单查询</h5><p>查询集合所有文档</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>只查一条</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.findOne()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>条件查询</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find({字段:值})
db.message.find({&quot;messageId&quot;: 1})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>投影查询</p><p>投影字段在第二个参数，值如果 true 或非 0，那么表示该字段显示。如果为 false 或 0 表示不显示</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find({},{&quot;messageId&quot;:true})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>数量查询</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.count(query)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>分页查询</p><p>跳过 3 条，查询 2 条</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find().skip(3).limit(2)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询结果排序</p><p>1 表示升序，-1 表示降序</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find().sort({messageId:1})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="复杂查询" tabindex="-1"><a class="header-anchor" href="#复杂查询" aria-hidden="true">#</a> 复杂查询</h5><p>正则查询</p><p>正则表达式是 js 的正则语法</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find({字段:/正则表达式/})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>比较查询</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find({字段:{$比较符号: 字段值} })
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>比较符号详见 语法-&gt; 比较符号 一章，常见的有 <code>$eq</code></p><p>包含查询</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find({字段:{$in: [值 1,值 2]} })
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>条件连接查询</p><p>如下是 <code>$and</code> 连接，还支持 <code>$or</code>等其他操作</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.find({
	$and:[
	{条件 1},
	{条件 2},
	]
}
)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="更新" tabindex="-1"><a class="header-anchor" href="#更新" aria-hidden="true">#</a> 更新</h4><p>更新语法如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.update(query,update,options)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>覆盖的修改</p><p>也就是替换原文档，如下命令，只会剩下 <code>content</code> 字段，其余字段被删除</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.update({_id:&quot;1&quot;},{}&quot;content&quot;:&quot;hello1&quot;})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>局部修改，默认只会修改一条数据</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.update({&quot;messageId&quot;:&quot;1&quot;},{$set:{&quot;content&quot;:&quot;hello1&quot;}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果需要修改多条符合的数据</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.update({&quot;messageId&quot;:&quot;1&quot;},{$set:{&quot;content&quot;:&quot;hello1&quot;}},{multi:true})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>局部修改，增加指定字段数值</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.update({&quot;messageId&quot;:&quot;1&quot;},{$inc:{&quot;messageId&quot;:NumberInt(1)}})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h4><p>删除语法如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.remove(query)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除全部</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.remove({})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><h3 id="比较符号" tabindex="-1"><a class="header-anchor" href="#比较符号" aria-hidden="true">#</a> 比较符号</h3><p>常用的有如下几种</p><table><thead><tr><th>符号</th><th>描述</th></tr></thead><tbody><tr><td>$eq</td><td>匹配等于某个值的文档</td></tr><tr><td>$ne</td><td>匹配不等于某个值的文档</td></tr><tr><td>$gt</td><td>匹配大于某个值的文档</td></tr><tr><td>$gte</td><td>匹配大于等于某个值的文档</td></tr><tr><td>$lt</td><td>匹配小于某个值的文档</td></tr><tr><td>$lte</td><td>匹配小于等于某个值的文档</td></tr><tr><td>$in</td><td>匹配数组中包含某个值的文档</td></tr><tr><td>$nin</td><td>匹配数组中不包含某个值的文档</td></tr><tr><td>$exists</td><td>匹配存在某个字段的文档</td></tr><tr><td>$type</td><td>匹配字段类型符合某个类型的文档</td></tr><tr><td>$regex</td><td>匹配正则表达式符合某个模式的文档</td></tr><tr><td>$text</td><td>用于文本搜索</td></tr><tr><td>$where</td><td>用于自定义过滤条件</td></tr><tr><td>$elemMatch</td><td>用于匹配数组中至少一个元素符合指定条件的文档</td></tr><tr><td>$size</td><td>匹配数组大小等于某个值的文档</td></tr><tr><td>$all</td><td>匹配数组中包含所有指定值的文档</td></tr><tr><td>$mod</td><td>匹配字段值模除某个值的余数等于指定值的文档</td></tr><tr><td>$near</td><td>用于地理空间查询，匹配指定坐标附近的文档</td></tr><tr><td>$geoIntersects</td><td>用于地理空间查询，匹配与指定区域相交的文档</td></tr><tr><td>$geoWithin</td><td>用于地理空间查询，匹配被指定区域包含的文档</td></tr><tr><td>$box</td><td>用于地理空间查询，匹配在指定矩形框内的文档</td></tr><tr><td>$center</td><td>用于地理空间查询，匹配在指定圆形范围内的文档</td></tr><tr><td>$centerSphere</td><td>用于地理空间查询，匹配在指定球体范围内的文档</td></tr><tr><td>$nearSphere</td><td>用于地理空间查询，匹配在指定球体范围内的文档，计算时会考虑地球曲率</td></tr></tbody></table><h3 id="异常捕获" tabindex="-1"><a class="header-anchor" href="#异常捕获" aria-hidden="true">#</a> 异常捕获</h3><p>mongodb 是部分支持事务，一次插入多条即使出现部分错误，也不会回滚，异常捕获可以了解其中哪里出错</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>try{
	// mongodb 操作
}catch(e){
	print(e);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="索引" tabindex="-1"><a class="header-anchor" href="#索引" aria-hidden="true">#</a> 索引</h2><p>MongoDB 索引是 B+树（网上有一些分析说是 B 树其实是错误的）</p><h3 id="索引分类" tabindex="-1"><a class="header-anchor" href="#索引分类" aria-hidden="true">#</a> 索引分类</h3><table><thead><tr><th>索引类型</th><th>描述</th><th>适用场景</th></tr></thead><tbody><tr><td>单键索引</td><td>基于集合中的单个字段建立，用于支持对该字段的等值查询、范围查询和排序</td><td>查询单个字段的值或对该字段进行排序</td></tr><tr><td>复合索引</td><td>由多个字段组成，用于支持多个字段的查询和排序</td><td>处理需要多个字段组合的查询和排序</td></tr><tr><td>唯一索引</td><td>要求索引的值必须唯一，用于保证数据完整性</td><td>保证某个字段的值唯一性</td></tr><tr><td>TTL 索引</td><td>用于自动过期数据，可以设置一个时间戳来表示数据的过期时间</td><td>处理需要自动删除过期数据的场景</td></tr><tr><td>地理空间索引</td><td>用于支持地理空间查询，例如在地图上查找特定区域内的位置信息</td><td>处理需要根据地理位置信息进行查询的场景</td></tr><tr><td>文本索引</td><td>用于支持全文搜索，例如在文本字段中查找特定的关键字</td><td>处理需要对文本内容进行全文搜索的场景</td></tr></tbody></table><h3 id="索引管理" tabindex="-1"><a class="header-anchor" href="#索引管理" aria-hidden="true">#</a> 索引管理</h3><p>查询集合所有索引</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.getIndexes()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建索引</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.createIndex(keys,options)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>keys</code></td><td>document</td><td>文档</td></tr><tr><td><code>options</code></td><td>document</td><td>选项</td></tr></tbody></table><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.myCollection.createIndex({ field1: 1, field2: -1 }, { unique: true })
表示字段 1 升序，字段 2 降序索引，索引值唯一
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>选项</th><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>background</td><td>Boolean</td><td>表示创建索引的过程在后台运行，不会阻塞其他操作。</td></tr><tr><td>unique</td><td>Boolean</td><td>表示索引的值必须唯一。</td></tr><tr><td>sparse</td><td>Boolean</td><td>表示索引不包含空值（null）或缺失的字段。</td></tr><tr><td>expireAfterSeconds</td><td>Number</td><td>用于设置 TTL 索引的过期时间（单位为秒）。</td></tr><tr><td>name</td><td>String</td><td>用于指定索引的名称。如果不指定，MongoDB 会自动生成一个名称。</td></tr><tr><td>collation</td><td>Object</td><td>用于指定索引的排序规则。</td></tr><tr><td>partialFilterExpression</td><td>Object</td><td>用于创建部分索引，即仅在满足指定条件的文档上创建索引。</td></tr><tr><td>storageEngine</td><td>Object</td><td>用于指定索引的存储引擎。</td></tr><tr><td>weights</td><td>Object</td><td>用于创建文本索引时指定字段的权重。</td></tr></tbody></table><p>移除索引</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.&lt;集合名&gt;.dropIndex(index)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>index</code></td><td>String 或 document</td><td>指定要删除的索引名或文档，</td></tr></tbody></table><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.message.dropIndex({&quot;messageId&quot;:1})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="聚合-aggregate" tabindex="-1"><a class="header-anchor" href="#聚合-aggregate" aria-hidden="true">#</a> 聚合 aggregate</h2><table><thead><tr><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td><code>$match</code></td><td>过滤符合条件的文档</td></tr><tr><td><code>$limit</code></td><td>限制聚合结果的数量</td></tr><tr><td><code>$skip</code></td><td>跳过指定数量的文档</td></tr><tr><td><code>$sort</code></td><td>对聚合结果进行排序</td></tr><tr><td><code>$group</code></td><td>对文档进行分组汇总</td></tr><tr><td><code>$count</code></td><td>统计文档数量</td></tr><tr><td><code>$project</code></td><td>筛选集合中的字段</td></tr><tr><td><code>$unwind</code></td><td>展开数组，拆分为多个文档</td></tr><tr><td><code>$lookup</code></td><td>从另一个集合中查找关联文档</td></tr><tr><td><code>$graphLookup</code></td><td>对文档进行递归查找</td></tr><tr><td><code>$bucket</code></td><td>对数据进行桶分类</td></tr><tr><td><code>$bucketAuto</code></td><td>自动分桶</td></tr><tr><td><code>$geoNear</code></td><td>查找接近指定位置的文档</td></tr><tr><td><code>$addFields</code></td><td>添加新字段</td></tr><tr><td><code>$replaceRoot</code></td><td>用文档中的字段替换根字段</td></tr><tr><td><code>$sample</code></td><td>随机取一部分文档</td></tr></tbody></table><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2><p>https://www.bilibili.com/video/BV1bJ411x7mq</p>`,106),q={href:"https://blog.csdn.net/ycclydy/article/details/120861374",target:"_blank",rel:"noopener noreferrer"};function f(y,k){const d=i("ExternalLinkIcon");return s(),l("div",null,[c,t("p",null,[e("去官网下载社区版："),t("a",u,[e("Download MongoDB Community Server | MongoDB"),a(d)])]),h,t("ol",null,[t("li",null,[t("p",null,[e("在 mongoDB6 以后，命令行工具需要单独下载："),t("a",p,[e("MongoDB Shell Download | MongoDB"),a(d)])])]),v]),b,g,t("p",null,[e("可以试试官方的 "),t("a",m,[e("Compass"),a(d)])]),x,t("p",null,[t("a",q,[e("mongoDB中聚合(aggregate)的具体使用"),a(d)])])])}const _=r(o,[["render",f],["__file","MongoDB.html.vue"]]);export{_ as default};
