import{_ as l,r as i,o as t,c as o,a as n,b as s,d as e,e as c}from"./app-9157d7b3.js";const d={},p=c(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>YAML是一种人类容易读写的数据序列化格式，常用于配置文件、数据传输协议场景。</p><h2 id="基本" tabindex="-1"><a class="header-anchor" href="#基本" aria-hidden="true">#</a> 基本</h2><p>基本规则如下：</p><ul><li>使用缩进表示层级关系。</li><li>缩进时不允许使用 Tab 键，只允许使用空格。</li><li>缩进的空格数不重要，但同级元素必须左侧对齐。</li><li>大小写敏感。</li></ul><p>支持三种数据结构：</p><ul><li>对象：键值对的集合</li><li>数组：一组按次序排列的值</li><li>字面量：单个的、不可拆分的值</li></ul><h2 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构" aria-hidden="true">#</a> 数据结构</h2><h3 id="字面量" tabindex="-1"><a class="header-anchor" href="#字面量" aria-hidden="true">#</a> 字面量</h3><p>字面量是指单个的，不可拆分的值，例如：数字、字符串、布尔值、以及日期等。</p><p>声明字面量如下方法如下，默认不需要双引号引用</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">key</span><span class="token punctuation">:</span> value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="常见类型" tabindex="-1"><a class="header-anchor" href="#常见类型" aria-hidden="true">#</a> 常见类型</h4><p>数值：无引号的整数或浮点数</p><p>布尔值：无引号的 <code>true</code> 和 <code>false</code></p><p>空对象：无引号<code>null</code></p><h4 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h4><p>字符串分单行和多行表示</p><p>单行字符串用引号表示，引号内容有如下规则：</p><ul><li><code>&quot;</code> （双引号）需要用 <code>\\</code> 转义</li><li>单引号 <code>&#39;</code> 不需要转义</li></ul><h3 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h3><p>对象有两种写法</p><ul><li>用层级结构表示对象</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">website</span><span class="token punctuation">:</span> 
  <span class="token key atrule">name</span><span class="token punctuation">:</span> bianchengbang
  <span class="token key atrule">url</span><span class="token punctuation">:</span> www.biancheng.net
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>单行表示</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">website</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">name</span><span class="token punctuation">:</span> bianchengbang<span class="token punctuation">,</span><span class="token key atrule">url</span><span class="token punctuation">:</span> www.biancheng.net<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h3><p>数组有两种写法</p><ul><li>用 <code>-</code> 表示数组内元素</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">pets</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> dog
  <span class="token punctuation">-</span> cat
  <span class="token punctuation">-</span> pig
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>单行表示</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">pets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>dog<span class="token punctuation">,</span>cat<span class="token punctuation">,</span>pig<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="控制" tabindex="-1"><a class="header-anchor" href="#控制" aria-hidden="true">#</a> 控制</h2><h3 id="控制字符串末尾换行符" tabindex="-1"><a class="header-anchor" href="#控制字符串末尾换行符" aria-hidden="true">#</a> 控制字符串末尾换行符</h3><p>多行字符串以 <code>|</code> 开头表示，<code>|</code>可以添加各种后缀控制输出的字符串</p><ul><li><code>|</code>字符串末尾有换行符，如果有多个空行就会合并成一个</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
  hello
  world</span>


<span class="token key atrule">message2</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的 json 如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello\\nworld\\n&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;message2&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>|-</code>忽略字符串末尾的换行</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
  hello
  world</span>


<span class="token key atrule">message2</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello\\nworld&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;message2&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>|+</code>保留所有的空白</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
  hello
  world</span>


<span class="token key atrule">message2</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hello\\nworld\\n\\n\\n&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;message2&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="折叠多行字符串" tabindex="-1"><a class="header-anchor" href="#折叠多行字符串" aria-hidden="true">#</a> 折叠多行字符串</h3><p>使用 <code>&gt;</code> 号可以拼接多行字符串，并用空格连接，<code>&gt;</code>可以组合<code>+</code>和<code>-</code>对末尾空行进行控制</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token scalar string">
  i
  am
  cat</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;i am cat\\n&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="锚点" tabindex="-1"><a class="header-anchor" href="#锚点" aria-hidden="true">#</a> 锚点</h2><p>锚点和变量类似，用 <code>&amp;</code>声明变量，用<code>*</code>引用变量</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token important">&amp;var1</span> <span class="token string">&quot;xiaoso&quot;</span>
<span class="token key atrule">messageList</span><span class="token punctuation">:</span> 
  <span class="token punctuation">-</span> i am
  <span class="token punctuation">-</span> <span class="token important">*var1</span> 
  <span class="token punctuation">-</span> .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xiaoso&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;messageList&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;i am&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;xiaoso&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;.&quot;</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,54),r={href:"http://c.biancheng.net/spring_boot/yaml.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://yoshiera.gitee.io/posts/miscellaneous/yaml/",target:"_blank",rel:"noopener noreferrer"},v={href:"http://tool.p2hp.com/tool-format-yaml/",target:"_blank",rel:"noopener noreferrer"};function m(k,h){const a=i("ExternalLinkIcon");return t(),o("div",null,[p,n("p",null,[n("a",r,[s("YAML教程（快速入门版） (biancheng.net)"),e(a)])]),n("p",null,[n("a",u,[s("yaml格式化 - Yoshieraの部屋 (gitee.io)"),e(a)])]),n("p",null,[n("a",v,[s("在线YAML解析转换工具 在线小工具网站 (p2hp.com)"),e(a)])])])}const g=l(d,[["render",m],["__file","yaml.html.vue"]]);export{g as default};
