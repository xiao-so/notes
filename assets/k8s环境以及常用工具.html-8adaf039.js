import{_ as s,r as n,o as r,c as d,a as e,b as i,d as t,e as c}from"./app-9157d7b3.js";const h={},o=c(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>k8s在物理机部署复杂且默认含有很多不常用功能，占用内存CPU资源多，部署起点高。</p><p>在学习环境或者测试环境中，我们可能希望有一个单机的k8s，并且希望部署尽量简单，并且部署后希望能够快速了解当前环境</p><h2 id="k8s环境部署" tabindex="-1"><a class="header-anchor" href="#k8s环境部署" aria-hidden="true">#</a> k8s环境部署</h2><p>推荐个人在虚拟机里部署k3s（使用docker作为运行时），部署方便。不推荐用容器方式启动kind，因为相当于容器中又起了容器集群，调试k8s内应用麻烦，但是启动k8s集群方便可复现</p><h3 id="kind" tabindex="-1"><a class="header-anchor" href="#kind" aria-hidden="true">#</a> kind</h3><p>kind是Kubernetes本地集群的轻量级工具,用于在本地开发和测试Kubernetes应用程序，kind不适用于生产环境</p><p>kind可以直接用docker启动，一个启动kind容器，就是一个独立的k8s集群节点</p><h3 id="k3s" tabindex="-1"><a class="header-anchor" href="#k3s" aria-hidden="true">#</a> k3s</h3><p>k3s是为生产环境优化的轻量级Kubernetes发行版，k3s安装和配置更简单,资源占用更小。</p><p>k3s占用资源低，适合在个人电脑，VM上直接进行部署</p><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h4><p>安装docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> https://releases.rancher.com/install-docker/20.10.sh <span class="token operator">|</span> <span class="token function">sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装k3s，使用docker作为runtime</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-sfL</span> https://rancher-mirror.rancher.cn/k3s/k3s-install.sh <span class="token operator">|</span> <span class="token assign-left variable">INSTALL_K3S_MIRROR</span><span class="token operator">=</span>cn <span class="token function">sh</span> <span class="token parameter variable">-s</span> - <span class="token parameter variable">--docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 kubectl 检查节点状态</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl get node
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="工具" tabindex="-1"><a class="header-anchor" href="#工具" aria-hidden="true">#</a> 工具</h2><h3 id="kubekey" tabindex="-1"><a class="header-anchor" href="#kubekey" aria-hidden="true">#</a> kubekey</h3><p>kubekey是k8s一个部署工具，用于一键部署k8s，k3s集群。</p><p>一般生产环境可以用kubekey部署，自用环境 kind 和 k3s 已经足够方便。</p><h3 id="kubesphere" tabindex="-1"><a class="header-anchor" href="#kubesphere" aria-hidden="true">#</a> kubesphere</h3><p>KubeSphere简单易用的可视化Web工作台来管理容器部署，对开发很友好方便。不想硬敲命令行的都简易部署一套</p><h3 id="k9s" tabindex="-1"><a class="header-anchor" href="#k9s" aria-hidden="true">#</a> k9s</h3><p>k9s通过终端提供管理k8s集群可视化操作，一般kubectl命名都能用k9s在终端上通过交互方式执行。推荐在不能安装kubesphere的环境使用</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,27),k={href:"https://docs.k3s.io/zh/",target:"_blank",rel:"noopener noreferrer"};function l(p,u){const a=n("ExternalLinkIcon");return r(),d("div",null,[o,e("p",null,[e("a",k,[i("K3s - 轻量级 Kubernetes | K3s"),t(a)])])])}const _=s(h,[["render",l],["__file","k8s环境以及常用工具.html.vue"]]);export{_ as default};
