import{_ as l,r as o,o as c,c as p,a as n,b as s,d as a,w as u,e}from"./app-9157d7b3.js";const d="/notes/assets/overview-actions-simple-873d1510.png",r="/notes/assets/image-20230125130526165-d1503883.png",k={},v=n("h1",{id:"github-actions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#github-actions","aria-hidden":"true"},"#"),s(" GitHub-Actions")],-1),h=n("h2",{id:"简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),s(" 简介")],-1),b=n("p",null,"本文档只介绍 GitHub Actions 一些基本操作，提供一些简单例子。",-1),m={href:"https://docs.github.com/zh/actions",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/xiaoso456/github-actions-demo",target:"_blank",rel:"noopener noreferrer"},y=e(`<h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><ol><li>在 GitHub 仓库下创建 <code>.github/workflows</code> 目录</li><li>在目录下创建一个 <code>github-actions-demo.yml</code> 文件</li><li>修改文件内容</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> GitHub Actions Demo
<span class="token key atrule">run-name</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.actor <span class="token punctuation">}</span><span class="token punctuation">}</span> is testing out GitHub Actions 🚀
<span class="token key atrule">on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>push<span class="token punctuation">]</span>
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">Explore-GitHub-Actions</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;🎉 The job was automatically triggered by a $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event_name <span class="token punctuation">}</span><span class="token punctuation">}</span> event.&quot;
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;🐧 This job is now running on a $<span class="token punctuation">{</span><span class="token punctuation">{</span> runner.os <span class="token punctuation">}</span><span class="token punctuation">}</span> server hosted by GitHub<span class="token tag">!</span>&quot;
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;🔎 The name of your branch is $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.ref <span class="token punctuation">}</span><span class="token punctuation">}</span> and your repository is $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.repository <span class="token punctuation">}</span><span class="token punctuation">}</span>.&quot;
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Check out repository code
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;💡 The $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.repository <span class="token punctuation">}</span><span class="token punctuation">}</span> repository has been cloned to the runner.&quot;
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;🖥️ The workflow is now ready to test your code on the runner.&quot;
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> List files in the repository
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          ls \${{ github.workspace }}</span>
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;🍏 This job&#39;s status is $<span class="token punctuation">{</span><span class="token punctuation">{</span> job.status <span class="token punctuation">}</span><span class="token punctuation">}</span>.&quot;
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><p>提交文件，推送到远程分支 quick-start</p><p>可以在项目 Actions 里找到如下标题的信息，其中 <code>\${{ github.actor }}</code> 被替换为 <code>xiaoso-so</code></p><blockquote><p>xiao-so is testing out GitHub Actions 🚀</p></blockquote><p>点击可以查看更详细的执行结果</p></li></ol><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识" aria-hidden="true">#</a> 基础知识</h2><h3 id="github-actions-是什么" tabindex="-1"><a class="header-anchor" href="#github-actions-是什么" aria-hidden="true">#</a> GitHub Actions 是什么</h3><p>GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可用于自动执行生成、测试和部署。</p><h3 id="github-actions-的组件" tabindex="-1"><a class="header-anchor" href="#github-actions-的组件" aria-hidden="true">#</a> GitHub Actions 的组件</h3><p><img src="`+d+'" alt="工作流概述"></p><p>Event：什么时候触发 GitHub Actions 工作流，例如 Push 代码、手动触发。</p><p>Runner：执行 Job 的程序，运行器。</p><p>Job：执行操作的集合，包含一个或多个 Step。Job 之间可以是串行或者并行的。</p><p>Step：步骤，同一个Job的步骤按顺序执行，共享运行器的数据，常见有执行一段命令、运行<code>shell</code>脚本、执行一个 <code>action</code> 等。</p><p>action：用于 GitHub Actions 平台自定义的应用程序，常用于执行复杂重复的工作，例如从 GitHub 拉取代码，安装 Node.js 环境。</p><p>workflow：在 <code>./github/workflows</code> 的每一个文件为一个 workflow。</p><h3 id="了解-github-actions-文件" tabindex="-1"><a class="header-anchor" href="#了解-github-actions-文件" aria-hidden="true">#</a> 了解 GitHub Actions 文件</h3>',16),f=n("p",null,"分支：demo-action",-1),_={href:"https://github.com/xiaoso456/github-actions-demo/tree/demo-action",target:"_blank",rel:"noopener noreferrer"},x=e(`<p>GitHub Actions 文件采用 YAML 语法，文件存放在代码仓库 <code>.github/workflows/</code> 文件夹下，可以有任意多个。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>├─.github
│  └─workflows
│          docs.yml
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一份简单的文件示例如下，其中 demo-job 的 job 做了三件事：</p><ol><li>checkout 当前仓库最新的代码</li><li>列出仓库的文件</li><li>执行 <code>echo &#39;finish&#39;</code>命令，输出 finish 文本</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 工作流的名称</span>
<span class="token key atrule">name</span><span class="token punctuation">:</span> demo<span class="token punctuation">-</span>action

<span class="token comment"># 工作流运行的名称</span>
<span class="token key atrule">run-name</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.actor <span class="token punctuation">}</span><span class="token punctuation">}</span> run the demo<span class="token punctuation">-</span>job 

<span class="token comment"># 工作流触发时机</span>
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token comment"># 每当 push 到 demo-job 分支时触发部署</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>demo<span class="token punctuation">-</span>job<span class="token punctuation">]</span>
  <span class="token comment"># 手动触发部署</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>

<span class="token comment"># 定义 jobs</span>
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token comment"># 定义名为 demo-job 的 job</span>
  <span class="token key atrule">demo-job</span><span class="token punctuation">:</span>
    <span class="token comment"># 运行器使用的环境，此处为 ubuntu</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token comment"># 定义执行的 steps </span>
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token comment"># 这个 step 为 checkout 当前仓库的代码, name 为 step 名，可选</span>
      <span class="token comment"># 使用(uses) https://github.com/actions/checkout 下打了 v3 tag的 action</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Check out repository code
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
        <span class="token comment"># with 后面输入 action 需要的参数，这里表示最新的代码</span>
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">fetch-depth</span><span class="token punctuation">:</span> <span class="token number">0</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> List files in the repository
        <span class="token key atrule">run</span><span class="token punctuation">:</span> ls $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.workspace <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token comment"># 输出 finish</span>
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;finish&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作" aria-hidden="true">#</a> 基础操作</h2><h3 id="设置触发时机" tabindex="-1"><a class="header-anchor" href="#设置触发时机" aria-hidden="true">#</a> 设置触发时机</h3><p>常见触发时机有以下几种：</p><ul><li><p>push：推送代码到远程仓库</p></li><li><p>workflow_dispatch：手动触发</p></li><li><p>schedule：计划任务，在指定时间触发，支持 cron 表达式</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>GitHub Actions 提供的执行器环境的时间，可能和你 PC 时间不一致</p></div></li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 工作流触发时机</span>
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token comment"># 每当 push 到 demo-job 分支时触发部署</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>demo<span class="token punctuation">-</span>job<span class="token punctuation">]</span>
  <span class="token comment"># 手动触发部署</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>
  <span class="token comment"># 定时任务</span>
  <span class="token key atrule">schedule</span><span class="token punctuation">:</span>
  	<span class="token comment"># 每周一到四，5:30 UTC 时触发</span>
    <span class="token punctuation">-</span> <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">&#39;30 5 * * 1,3&#39;</span>
    <span class="token punctuation">-</span> <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">&#39;30 5 * * 2,4&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-actions" tabindex="-1"><a class="header-anchor" href="#使用-actions" aria-hidden="true">#</a> 使用 Actions</h3><p>使用已经定义好的 Actions 可以省去大量写脚本的时间，只需要输入一些简单参数就可以完成 checkout 仓库代码、安装 Java 环境等操作。</p>`,12),w=n("code",null,"Check out repository code",-1),j=n("code",null,"actions/checkout@v3",-1),A=n("h4",{id:"从市场中获取-actions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#从市场中获取-actions","aria-hidden":"true"},"#"),s(" 从市场中获取 Actions")],-1),q={href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"},E={href:"https://docs.github.com/en/actions/learn-github-actions/finding-and-customizing-actions",target:"_blank",rel:"noopener noreferrer"},H=e(`<h4 id="actions-的基本使用" tabindex="-1"><a class="header-anchor" href="#actions-的基本使用" aria-hidden="true">#</a> Actions 的基本使用</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up JDK 1.8
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>java@v2
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">java-version</span><span class="token punctuation">:</span> <span class="token string">&#39;8&#39;</span>
          <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token string">&#39;maven&#39;</span>
          <span class="token key atrule">distribution</span><span class="token punctuation">:</span> <span class="token string">&#39;temurin&#39;</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，使用了托管在 GitHub 的 actions <code>actions/setup-java@v2</code> ，帮我们在环境上安装了 JDK1.8+Maven。</p><p>仓库地址为 <code>https://github.com/</code>+<code>actions/setup-java</code>，使用的版本为 <code>v2</code>，并用 <code>with</code> 传入 <code>java-version</code>、<code>cache</code>、<code>distribution</code> 三个参数。</p><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h3><h4 id="命名约定" tabindex="-1"><a class="header-anchor" href="#命名约定" aria-hidden="true">#</a> 命名约定</h4><p>以下规则适用于配置变量名称：</p><ul><li>名称只能包含字母数字字符（<code>[a-z]</code>、<code>[A-Z]</code>、<code>[0-9]</code>）或下划线 (<code>_</code>)。 不允许空格。</li><li>名称不能以 <code>GITHUB_</code> 前缀开头。</li><li>名称不能以数字开头。</li><li>名称不区分大小写。</li><li>名称在所创建的级别上必须是唯一的。</li></ul><h4 id="定义环境变量" tabindex="-1"><a class="header-anchor" href="#定义环境变量" aria-hidden="true">#</a> 定义环境变量</h4><p>单个 workflow 文件的工作流使用 <code>env</code> 键对变量进行定义，作用域有如下几种：</p><ul><li>单个 workflow：在 workflow 文件顶层定义</li><li>单个 job：在 job 下定义</li><li>单个 step：在 step 下定义</li></ul><p>示例文件如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Greeting on variable day
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  workflow_dispatch
<span class="token key atrule">env</span><span class="token punctuation">:</span>
  <span class="token key atrule">DAY_OF_WEEK</span><span class="token punctuation">:</span> Monday
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">greeting_job</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">env</span><span class="token punctuation">:</span>
      <span class="token key atrule">Greeting</span><span class="token punctuation">:</span> Hello
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;Say Hello Mona it&#39;s Monday&quot;</span>
        <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;$Greeting $First_Name. Today is $DAY_OF_WEEK<span class="token tag">!</span>&quot;
        <span class="token key atrule">env</span><span class="token punctuation">:</span>
          <span class="token key atrule">First_Name</span><span class="token punctuation">:</span> Mona
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),G={class:"custom-container tip"},$=n("p",{class:"custom-container-title"},"提示",-1),M=n("p",null,[s("这里只介绍为单个 workflow 定义变量，在表达式中，通常以 "),n("code",null,"${{ env.NAME }}"),s("方式引用。")],-1),N={href:"https://docs.github.com/zh/actions/learn-github-actions/variables#defining-configuration-variables-for-a-multiple-workflows",target:"_blank",rel:"noopener noreferrer"},S={class:"custom-container warning"},B=n("p",{class:"custom-container-title"},"警告",-1),R={href:"https://docs.github.com/zh/actions/security-guides/encrypted-secrets",target:"_blank",rel:"noopener noreferrer"},T=e(`<h4 id="使用环境变量" tabindex="-1"><a class="header-anchor" href="#使用环境变量" aria-hidden="true">#</a> 使用环境变量</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Greeting on variable day
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  workflow_dispatch
<span class="token key atrule">env</span><span class="token punctuation">:</span>
  <span class="token key atrule">DAY_OF_WEEK</span><span class="token punctuation">:</span> Monday
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">greeting_job</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">env</span><span class="token punctuation">:</span>
      <span class="token key atrule">Greeting</span><span class="token punctuation">:</span> Hello
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;Say Hello Mona it&#39;s Monday&quot;</span>
        <span class="token key atrule">if</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> env.DAY_OF_WEEK == &#39;Monday&#39; <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &quot;$Greeting $First_Name. Today is $DAY_OF_WEEK<span class="token tag">!</span>&quot;
        <span class="token key atrule">env</span><span class="token punctuation">:</span>
          <span class="token key atrule">First_Name</span><span class="token punctuation">:</span> Mona
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以使用运行器环境变量或上下文访问 <code>env</code> 变量值</p><p>在脚本中使用语法如下：</p><ul><li>Linux 环境：Linux 系统环境使用 bash shell，语法为 <code>$NAME</code></li><li>Windows 环境：Windows系统环境使用 PowerShell，语法为 <code>$env:NAME</code></li></ul><p>也可以在上下文中使用表达式引用变量，语法为 <code>\${{ env.NAME }}</code></p><h4 id="变量优先级" tabindex="-1"><a class="header-anchor" href="#变量优先级" aria-hidden="true">#</a> 变量优先级</h4><p>同名变量优先级如下：</p><ol><li>环境级变量</li><li>仓库级变量</li><li>组织级别变量</li></ol><p>简而言之，就是作用域越小，优先级越高。</p><h4 id="默认变量" tabindex="-1"><a class="header-anchor" href="#默认变量" aria-hidden="true">#</a> 默认变量</h4><p>Github 默认提供一些变量，可以直接使用</p><table><thead><tr><th>变量</th><th>说明</th></tr></thead><tbody><tr><td><code>GITHUB_ACTOR</code></td><td>发起工作流程的个人或应用程序的名称。 例如 <code>octocat</code>。</td></tr><tr><td><code>GITHUB_BASE_REF</code></td><td>工作流运行中拉取请求的基本引用或目标分支的名称。 仅当触发工作流运行的事件是 <code>pull_request</code> 或 <code>pull_request_target</code> 时才设置此属性。 例如 <code>main</code>。</td></tr></tbody></table>`,13),D={href:"https://docs.github.com/zh/actions/learn-github-actions/variables#default-environment-variables",target:"_blank",rel:"noopener noreferrer"},I=e(`<h3 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式" aria-hidden="true">#</a> 表达式</h3><p>表达式可以是文本、上下文引用、函数：</p><p>表达式：<code>\${{ &lt;expression&gt; }}</code></p><h5 id="文本" tabindex="-1"><a class="header-anchor" href="#文本" aria-hidden="true">#</a> 文本</h5><p>作为表达式的一部分，可使用 <code>boolean</code>、<code>null</code>、<code>number</code> 或 <code>string</code> 数据类型。</p><table><thead><tr><th style="text-align:left;">数据类型</th><th style="text-align:left;">文本值</th></tr></thead><tbody><tr><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code> 或 <code>false</code></td></tr><tr><td style="text-align:left;"><code>null</code></td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">JSON 支持的任何数字格式。</td></tr><tr><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">无需将字符串括在 <code>\${{</code> 和 <code>}}</code> 中。 但是，如果这样做，则必须在字符串两边使用单引号 (<code>&#39;</code>)。 若要使用文本单引号，请使用额外的单引号 (<code>&#39;&#39;</code>) 转义文本单引号。 用双引号 (<code>&quot;</code>) 括起来会引发错误。</td></tr></tbody></table><p>示例</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">env</span><span class="token punctuation">:</span>
  <span class="token key atrule">myNull</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token null important">null</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token key atrule">myBoolean</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token boolean important">false</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token key atrule">myIntegerNumber</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token number">711</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token key atrule">myFloatNumber</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token number">-9.2</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token key atrule">myHexNumber</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token number">0xff</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token key atrule">myExponentialNumber</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token number">-2.99e-2</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token key atrule">myString</span><span class="token punctuation">:</span> Mona the Octocat
  <span class="token key atrule">myStringInBraces</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> &#39;It&#39;&#39;s open source<span class="token tag">!&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h5><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>( )</code></td><td style="text-align:left;">逻辑分组</td></tr><tr><td style="text-align:left;"><code>[ ]</code></td><td style="text-align:left;">索引</td></tr><tr><td style="text-align:left;"><code>!</code></td><td style="text-align:left;">Not</td></tr><tr><td style="text-align:left;"><code>&lt;</code></td><td style="text-align:left;">小于</td></tr><tr><td style="text-align:left;"><code>&gt;</code></td><td style="text-align:left;">大于</td></tr><tr><td style="text-align:left;"><code>==</code></td><td style="text-align:left;">等于</td></tr><tr><td style="text-align:left;"><code>!=</code></td><td style="text-align:left;">不等于</td></tr><tr><td style="text-align:left;"><code>&amp;&amp;</code></td><td style="text-align:left;">且</td></tr><tr><td style="text-align:left;">\`</td><td style="text-align:left;"></td></tr></tbody></table><h5 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h5><p>GitHub 提供一组内置的函数，可用于表达式，通常这些函数会返回或转换为字符串。</p><p>例如：<code>contains(&#39;Hello world&#39;, &#39;llo&#39;)</code> 返回 <code>true</code></p>`,13),C={href:"https://docs.github.com/zh/actions/learn-github-actions/expressions",target:"_blank",rel:"noopener noreferrer"},F=e('<table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>hashFiles(path)</code></td><td>如果存在文件，返回文件哈希值。如果不存在，返回 <code>path</code></td></tr><tr><td><code>startsWith( searchString, searchValue )</code></td><td>如果 <code>searchString</code> 以 <code>searchValue</code> 开头，将返回 <code>true</code>。 此函数不区分大小写。 抛出值到字符串。</td></tr><tr><td><code>success()</code></td><td>如果前面的步骤都没有失败或被取消，则返回 <code>true</code>。</td></tr></tbody></table><h3 id="上下文" tabindex="-1"><a class="header-anchor" href="#上下文" aria-hidden="true">#</a> 上下文</h3><p>常见的上下文（context）如下</p><table><thead><tr><th style="text-align:left;">上下文名</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>github</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">workflow 运行的相关信息。</td></tr><tr><td style="text-align:left;"><code>env</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">包含 workflow、job 或 step 中设置的变量。</td></tr><tr><td style="text-align:left;"><code>vars</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">包括仓库、组织、环境级别的变量。</td></tr><tr><td style="text-align:left;"><code>job</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">当前 job 设置的变量，常见有 job 容器 id，job 的状态。</td></tr><tr><td style="text-align:left;"><code>step</code></td><td style="text-align:left;"><code>object</code></td><td style="text-align:left;">当前 step 相关信息。</td></tr></tbody></table><p>可以通过表达式以 <code>${{ &lt;context.NAME&gt; }}</code> 的方式访问上下文变量</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><h3 id="打包一个-java-maven-项目-并发布到-github-releases" tabindex="-1"><a class="header-anchor" href="#打包一个-java-maven-项目-并发布到-github-releases" aria-hidden="true">#</a> 打包一个 Java Maven 项目，并发布到 Github Releases</h3>',7),L=n("p",null,"分支：quick-start-ci",-1),O={href:"https://github.com/xiaoso456/github-actions-demo/tree/quick-start-ci",target:"_blank",rel:"noopener noreferrer"},J=e(`<p>打包一个 Maven 项目，并把 jar 包推送到仓库的 Releases， <code>github-maven.yml</code> 文件如下</p><details class="custom-container details"><summary>详细文件内容</summary><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> GitHub Actions CI Demo
<span class="token key atrule">run-name</span><span class="token punctuation">:</span> package maven project
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> quick<span class="token punctuation">-</span>start<span class="token punctuation">-</span>ci
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">Package-Maven-Project</span><span class="token punctuation">:</span>
    <span class="token key atrule">env</span><span class="token punctuation">:</span>
      <span class="token comment"># Release tag</span>
      <span class="token key atrule">RELEASE_VERSION</span><span class="token punctuation">:</span> <span class="token string">&quot;0.0.1&quot;</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token comment"># checkout 仓库代码</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Check out repository code
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
      <span class="token comment"># 安装 jdk1.8 和 maven</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up JDK 1.8
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>java@v2
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">java-version</span><span class="token punctuation">:</span> <span class="token string">&#39;8&#39;</span>
          <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token string">&#39;maven&#39;</span>
          <span class="token key atrule">distribution</span><span class="token punctuation">:</span> <span class="token string">&#39;temurin&#39;</span>
      <span class="token comment"># 使用 maven package 打包</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build with Maven
        <span class="token key atrule">run</span><span class="token punctuation">:</span> mvn clean package <span class="token punctuation">-</span>e <span class="token punctuation">-</span>U <span class="token punctuation">-</span>B <span class="token punctuation">-</span><span class="token punctuation">-</span>file Hello<span class="token punctuation">-</span>Maven/pom.xml
      <span class="token comment"># 移动打包好的 jar 文件到 staging 文件夹</span>
      <span class="token punctuation">-</span> <span class="token key atrule">run</span><span class="token punctuation">:</span> mkdir staging <span class="token important">&amp;&amp;</span> cp Hello<span class="token punctuation">-</span>Maven/target/<span class="token important">*.jar</span> staging
      <span class="token comment"># 上传文件并发布到 Release</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;Upload to release&quot;</span>
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> <span class="token string">&quot;marvinpinto/action-automatic-releases@latest&quot;</span>
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">repo_token</span><span class="token punctuation">:</span> <span class="token string">&quot;\${{ secrets.GITHUB_TOKEN }}&quot;</span>
          <span class="token key atrule">automatic_release_tag</span><span class="token punctuation">:</span> <span class="token string">&quot;\${{ env.RELEASE_VERSION }}&quot;</span>
          <span class="token key atrule">prerelease</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">&quot;Release  \${{ env.RELEASE_VERSION }}&quot;</span>
          <span class="token key atrule">files</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
            staging/*.jar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p><img src="`+r+'" alt="image-20230125130526165"></p>',3);function K(V,z){const t=o("ExternalLinkIcon"),i=o("RouterLink");return c(),p("div",null,[v,h,b,n("p",null,[s("参考 "),n("a",m,[s("GitHub Actions文档 - GitHub Docs"),a(t)])]),n("p",null,[s("示例代码仓库 "),n("a",g,[s("xiaoso456/github-actions-demo"),a(t)])]),y,n("blockquote",null,[f,n("p",null,[n("a",_,[s("demo-action"),a(t)])])]),x,n("p",null,[s("例如，在 "),a(i,{to:"/CI&CD/github-actions.html#%E4%BA%86%E8%A7%A3-github-actions-%E6%96%87%E4%BB%B6"},{default:u(()=>[s("了解 GitHub Actions 文件")]),_:1}),s(" 中， name 为 "),w,s(" 的 step 使用了 "),j,s(" 这个 actions 来帮助 checkout 当前仓库的代码，省去了写大量脚本的功夫。")]),A,n("p",null,[s("可以在 "),n("a",q,[s("GitHub Marketplace"),a(t)]),s(" 找到更多的 Actions 来找简化部署 YAML 文件。")]),n("p",null,[s("此外，支持从同一仓库、其他仓库中引入 Actions，支持从 Docker Hub 上引用容器，如何自定义和使用自定义 Actions，请参考 "),n("a",E,[s("Finding and customizing actions - GitHub Docs"),a(t)]),s("。")]),H,n("div",G,[$,M,n("p",null,[s("如果需要在组织、仓库、环境级别定义变量，请参考 "),n("a",N,[s("为多个工作流定义配置变量"),a(t)])])]),n("div",S,[B,n("p",null,[s("不要在 workflow 变量里直接定义敏感信息（如密码），默认情况下变量在输出中会以明文方式呈现。 如果需要定义敏感信息，请参考 "),n("a",R,[s("加密机密"),a(t)])])]),T,n("p",null,[s("更多参考："),n("a",D,[s("变量"),a(t)])]),I,n("p",null,[s("一些函数如下，更多函数参考 "),n("a",C,[s("表达式"),a(t)])]),F,n("blockquote",null,[L,n("p",null,[n("a",O,[s("xiaoso456/github-actions-demo at quick-start-ci"),a(t)])])]),J])}const U=l(k,[["render",K],["__file","github-actions.html.vue"]]);export{U as default};
