import{_ as s,r as n,o as t,c as r,a as e,b as d,d as l,e as i}from"./app-9157d7b3.js";const o={},c=i(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>Helm 是 Kubernetes 的包管理器，提供便捷的方式一键安装服务。</p><p>Helm 有官方中文文档，且十分详细，本文只记录一些个人常用部分</p><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><p>Chart：Chart 代表着 Helm 包。它包含在 Kubernetes 集群内部运行应用程序，工具或服务所需的所有<strong>资源定义</strong>。</p><p>Repository：<em>Repository（仓库）</em> 是用来存放和共享 charts 的地方。</p><p>Release：<em>Release</em> 是运行在 Kubernetes 集群中的 chart 的实例。一个 chart 通常可以在同一个集群中安装多次。每一次安装都会创建一个新的 <em>release</em></p><h2 id="helm-命令" tabindex="-1"><a class="header-anchor" href="#helm-命令" aria-hidden="true">#</a> Helm 命令</h2><h2 id="repo" tabindex="-1"><a class="header-anchor" href="#repo" aria-hidden="true">#</a> repo</h2><h4 id="添加-helm-仓库" tabindex="-1"><a class="header-anchor" href="#添加-helm-仓库" aria-hidden="true">#</a> 添加 helm 仓库</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm repo <span class="token function">add</span> <span class="token operator">&lt;</span>repo_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>repo_addr<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="搜索-charts" tabindex="-1"><a class="header-anchor" href="#搜索-charts" aria-hidden="true">#</a> 搜索 Charts</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 从默认仓库搜索 https://artifacthub.io/ </span>
helm serach hub
<span class="token comment"># 从你添加的所有仓库搜索</span>
helm search repo <span class="token punctuation">[</span>keyword<span class="token punctuation">]</span>
<span class="token comment"># 搜索指定仓库</span>
helm serach repo <span class="token punctuation">[</span>keyword<span class="token punctuation">]</span> <span class="token parameter variable">--registry</span> <span class="token operator">&lt;</span>repo_addr<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="移除仓库" tabindex="-1"><a class="header-anchor" href="#移除仓库" aria-hidden="true">#</a> 移除仓库</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm repo remove <span class="token operator">&lt;</span>repo_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="状态" tabindex="-1"><a class="header-anchor" href="#状态" aria-hidden="true">#</a> 状态</h3><h4 id="查看chart可选配置" tabindex="-1"><a class="header-anchor" href="#查看chart可选配置" aria-hidden="true">#</a> 查看chart可选配置</h4><p>对于一个不了解的 charts，我们一般需要了解有哪些是内容可配的，可以使用 helm show values 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm show values <span class="token operator">&lt;</span>chart_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="查看-release-列表" tabindex="-1"><a class="header-anchor" href="#查看-release-列表" aria-hidden="true">#</a> 查看 release 列表</h4><p>查看 release 列表</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数参考</p><table><thead><tr><th>参数</th><th>值参考</th><th>说明</th></tr></thead><tbody><tr><td><code>--uninstalled</code></td><td></td><td>查看uninstall 时，使用了 <code>--keep-history</code> 参数的</td></tr></tbody></table><h4 id="install-release" tabindex="-1"><a class="header-anchor" href="#install-release" aria-hidden="true">#</a> install release</h4><p>安装一个 helm 包，生成一个实例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> <span class="token operator">&lt;</span>release_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>chart_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数参考</p><table><thead><tr><th>参数</th><th>值参考</th><th>说明</th></tr></thead><tbody><tr><td><code>--no-hooks</code></td><td></td><td>不运行当前命令的钩子</td></tr><tr><td><code>--timeout</code></td><td>5m0s</td><td>等待k8s命令完成时间</td></tr><tr><td><code>-n</code></td><td>n1</td><td>命名空间</td></tr></tbody></table><p>例如</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 从已有仓库安装</span>
helm <span class="token function">install</span> happy-panda bitnami/wordpress
<span class="token comment"># 从本地安装</span>
helm <span class="token function">install</span> happy-panda ./local_helm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装 release 传递参数方式一般有两种：</p><ul><li><p>使用 <code>--values</code> 或 <code>-f</code></p><p>这个方式使用 YAML 配置覆盖默认 values 文件，可以多次使用该命令指定多个文件，优先使用最右边文件</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> myRelase bitnami/wordpress <span class="token parameter variable">-f</span> <span class="token operator">&lt;</span>my_value.yml<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>使用 <code>--set</code></p><p>这个是通过命令式覆盖指定 key 的配置</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm <span class="token function">install</span> myRelase bitnami/wordpress <span class="token punctuation">\\</span>
  <span class="token parameter variable">--set</span> <span class="token assign-left variable">k1</span><span class="token operator">=</span>v2 <span class="token punctuation">\\</span>
  <span class="token parameter variable">--set</span> <span class="token assign-left variable">k2</span><span class="token operator">=</span>v2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果同时使用两个方式，注意<code>--set</code>优先级更高</p><h4 id="跟踪-release-状态" tabindex="-1"><a class="header-anchor" href="#跟踪-release-状态" aria-hidden="true">#</a> 跟踪 release 状态</h4><p>使用 helm status 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm status <span class="token operator">&lt;</span>release_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="upgrade-release" tabindex="-1"><a class="header-anchor" href="#upgrade-release" aria-hidden="true">#</a> upgrade release</h4><p>用于升级 chart 到新版本，或者修改 release 配置。Helm 会尝试执行最小侵入式升级，只是更新变更的内容，使用 upgrade 后，会更新实例版本号（revision）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm upgrade <span class="token parameter variable">-f</span> panda.yaml happy-panda bitnami/wordpress
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="获取-release-配置值" tabindex="-1"><a class="header-anchor" href="#获取-release-配置值" aria-hidden="true">#</a> 获取 release 配置值</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm get values <span class="token operator">&lt;</span>release_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="rollback-release" tabindex="-1"><a class="header-anchor" href="#rollback-release" aria-hidden="true">#</a> rollback release</h4><p>回滚指定 release 到 指定版本 revision</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm rollback <span class="token punctuation">[</span>release_name<span class="token punctuation">]</span> <span class="token punctuation">[</span>revision<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数参考</p><table><thead><tr><th>参数</th><th>值参考</th><th>说明</th></tr></thead><tbody><tr><td><code>--no-hooks</code></td><td></td><td>不运行当前命令的钩子</td></tr><tr><td><code>--timeout</code></td><td>5m0s</td><td>等待k8s命令完成时间</td></tr><tr><td><code>-n</code></td><td>n1</td><td>命名空间</td></tr></tbody></table><h4 id="uninstall-release" tabindex="-1"><a class="header-anchor" href="#uninstall-release" aria-hidden="true">#</a> uninstall release</h4><p>卸载实例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>helm uninstall <span class="token operator">&lt;</span>release_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>值参考</th><th>说明</th></tr></thead><tbody><tr><td><code>--keep-history</code></td><td></td><td>保留历史记录</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h4><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,56),h={href:"https://helm.sh/zh/docs/",target:"_blank",rel:"noopener noreferrer"};function p(u,m){const a=n("ExternalLinkIcon");return t(),r("div",null,[c,e("p",null,[e("a",h,[d("Helm | Docs"),l(a)])])])}const v=s(o,[["render",p],["__file","helm.html.vue"]]);export{v as default};
